# Github action to open a PR in Homebrew/homebrew-core when a new release of ballerina is being published
name: Publish Homebrew

on:
  push:
    branches:
      - prod-sync-homebrew # TODO: change to prod-sync
    paths:
      - '_data/latest/**'

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
        GITHUB_TOKEN: ${{ secrets.WEBSITE_TOKEN }}
        GH_EMAIL: ${{ secrets.GH_EMAIL }}
    steps:
      - name: Clone s-anjana/homebrew-core repo #TODO: change s-anjana to ballerina-bot
        run: git clone https://s-anjana:$GITHUB_TOKEN@github.com/s-anjana/homebrew-core.git #TODO: change s-anjana to ballerina-bot

      - name: Synch local homebrow-core repo with remote upstream
        run: |
          cd homebrew-core
          git pull origin master

          echo 'git pull origin master successful'
          
          git config --global user.email "$GH_EMAIL"
          git config --global user.name "s-anjana"

          echo 'git config success'

          git remote add upstream https://github.com/iHomebrew/homebrew-core.git
          echo 'git remote add upstream success'
          
          git pull upstream master -X theirs --no-edit
          echo 'git pull upstream master -X theirs --no-edit success'

          git push https://s-anjana:$GITHUB_TOKEN@github.com/s-anjana/homebrew-core.git --all

          echo 'Successfully pushed to s-anjana/homebrew-core branch'


      - name: Install jq for json manipulation
        run: sudo apt-get install jq

      - name: Check out repository.
        uses: actions/checkout@v2
      
      - name: Set up Python 3.x
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
        
      - name: Send the PR to Homebrew
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub
          VERSION="`jq -r '.version' _data/latest/metadata.json`"
          dist_url="https://dist.ballerina.io/downloads/$VERSION/ballerina-$VERSION.zip"
          checksum="$(curl -fsSL "$dist_url" | shasum -a 256 -b | awk '{print $1}')"

          if [ -z "$checksum" ]; then
            echo "ERROR: calculating the checksum failed for $dist_url" >&2
            exit 1
          fi

          python3 ./.github/scripts/homebrew_publish.py ${{ secrets.WEBSITE_TOKEN }} "$VERSION" "$checksum" "$dist_url"
      